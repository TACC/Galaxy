diff --git a/src/ConnectionGraphicsObject.cpp b/src/ConnectionGraphicsObject.cpp
index 8fff264..fb0d2ee 100644
--- a/src/ConnectionGraphicsObject.cpp
+++ b/src/ConnectionGraphicsObject.cpp
@@ -207,6 +207,12 @@ mouseReleaseEvent(QGraphicsSceneMouseEvent* event)
   auto node = locateNodeAt(event->scenePos(), _scene,
                            _scene.views()[0]->transform());
 
+  if (! node)
+  {
+    _scene.deleteConnection(_connection);
+    return;
+  }
+
   NodeConnectionInteraction interaction(*node, _connection, _scene);
 
   if (node && interaction.tryConnect())
diff --git a/src/NodeConnectionInteraction.cpp b/src/NodeConnectionInteraction.cpp
index fb701be..4a442c1 100644
--- a/src/NodeConnectionInteraction.cpp
+++ b/src/NodeConnectionInteraction.cpp
@@ -227,6 +227,10 @@ bool
 NodeConnectionInteraction::
 nodePortIsEmpty(PortType portType, PortIndex portIndex) const
 {
+#if 1
+  // Allow multiple connections to an input port
+  return true;
+#else
   NodeState const & nodeState = _node->nodeState();
 
   auto const & entries = nodeState.getEntries(portType);
@@ -235,4 +239,5 @@ nodePortIsEmpty(PortType portType, PortIndex portIndex) const
 
   const auto outPolicy = _node->nodeDataModel()->portOutConnectionPolicy(portIndex);
   return ( portType == PortType::Out && outPolicy == NodeDataModel::ConnectionPolicy::Many);
+#endif
 }
