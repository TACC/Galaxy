// ========================================================================== //
// Copyright (c) 2014-2020 The University of Texas at Austin.                 //
// All rights reserved.                                                       //
//                                                                            //
// Licensed under the Apache License, Version 2.0 (the "License");            //
// you may not use this file except in compliance with the License.           //
// A copy of the License is included with this software in the file LICENSE.  //
// If your copy does not contain the License, you may obtain a copy of the    //
// License at:                                                                //
//                                                                            //
//     https://www.apache.org/licenses/LICENSE-2.0                            //
//                                                                            //
// Unless required by applicable law or agreed to in writing, software        //
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  //
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.           //
// See the License for the specific language governing permissions and        //
// limitations under the License.                                             //
//                                                                            //
// ========================================================================== //

#include "ospray/SDK/math/vec.ih"
#include "ospray/SDK/math/box.ih"

struct Model;

#include "Vis.ih"
#include "MappedVis.ih"
#include "VolumeVis.ih"

struct Visualization_ispc
{
	// The ISPC side needs to a model, containing all geometries
	// that Embree is going to raytrace (eg. mapped and unmapped geometries),
	// and list of mapped geometries and volumes which will be colored via
	// a transfer function

  Model *uniform model;
      
  uniform int32 nVolumeVis;
  uniform pVolumeVis_ispc *uniform volumeVis;
   
  uniform int32 nMappedVis;
  uniform pMappedVis_ispc *uniform mappedVis;
  
  box3f global_bb;
  box3f local_bb;
};

typedef uniform Visualization_ispc *uniform pVisualization_ispc;

